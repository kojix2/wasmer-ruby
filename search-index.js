var searchIndex = JSON.parse('{\
"wasmer_ruby":{"doc":"The <code>wasmer</code> Ruby package","t":[0,0,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,13,13,13,3,3,3,3,13,13,3,3,3,3,3,3,3,3,3,3,3,3,4,3,3,3,13,3,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Ruby","Wasmer","Any","Array","Boolean","Float","Hash","Integer","String","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","EXTERN_REF","ExportType","Exports","F32","F64","FUNC_REF","Function","FunctionType","Global","GlobalType","I32","I64","ImportObject","ImportType","Instance","Int16View","Int32View","Int8View","Memory","MemoryType","Module","Store","Table","TableType","Type","Uint16View","Uint32View","Uint8View","V128","Value","Wasi","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","contains_namespace","custom_sections","data_size","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","exports","exports","f32","f64","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","grow","i32","i64","imports","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","int16_view","int32_view","int8_view","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","length","maximum","maximum","method_missing","minimum","minimum","module","mutable","mutable","name","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","params","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","register","results","serialize","shared","size","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type","type","type","type","type","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uint16_view","uint32_view","uint8_view","validate","value","Environment","LATEST_VERSION","SNAPSHOT0","SNAPSHOT1","StateBuilder","Version","argument","arguments","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","environment","environments","finalize","from","from","from","generate_import_object","get_version","init","init","init","into","into","into","map_directories","map_directory","new","pointer_metadata","pointer_metadata","pointer_metadata","preopen_directories","preopen_directory","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["wasmer_ruby","","wasmer_ruby::Ruby","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wasmer_ruby::Wasmerwasmer_ruby::Wasmer::Wasi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Declare Ruby native types. It’s only for documentation …","The <code>Wasmer</code> module provides the entire Wasmer API to …","Represents any kind of object.","A native Ruby array.","A native Ruby boolean.","A native Ruby float.","A native Ruby hash.","A native Ruby integer.","A native Ruby string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents the type of a module’s export (not to be …","Represents all the exports of an instance. It is built by …","","","","Represents a WebAssembly function instance.","Represents the signature of a function that is either …","Represents a WebAssembly global instance.","A descriptor for a WebAssembly global.","","","An <code>ImportObject</code> represents all of the import data used when","Represents the type of a module’s import. It is usually …","A WebAssembly instance is a stateful, executable instance …","","","","A WebAssembly memory instance.","A descriptor for a WebAssembly memory type.","A WebAssembly module contains stateless WebAssembly code …","The store represents all global state that can be …","A WebAssembly table instance.","A descriptor for a table in a WebAssembly module.","A WebAssembly type.","","","","","Represents a WebAssembly value of a specific type.","Wasmer’s WASI implementation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls the function with arguments. It returns zero or more …","Checks whether the import object contains a specific …","Get the custom sections of the module given a <code>name</code>.","Returns the size (in bytes) of the memory.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deserializes a serialized module binary into a Module.","","","","","","","","","","","","","","","","","","","","","","","","Returns a list of <code>ExportType</code> objects, which represents all …","Returns all the exported entities.","Creates a new <code>Value</code> containing a <code>float32</code>.","Creates a new <code>Value</code> containing a <code>float64</code>.","","","","","","","","","","","","","","","","","","","","","","","","Grows memory by the specified amount of WebAssembly pages.","Creates a new <code>Value</code> containing a <code>int32</code>.","Creates a new <code>Value</code> containing a <code>int64</code>.","Returns a list of <code>ImportType</code> objects, which represents all …","","","","","","","","","","","","","","","","","","","","","","","","Creates a read-and-write view over the memory data where …","Creates a read-and-write view over the memory data where …","Creates a read-and-write view over the memory data where …","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of exports.","Returns the maximum size of the memory of any.","Returns the maximum size of the table if any.","Returns either a <code>Function</code>, a <code>Memory</code>, a <code>Global</code>, or a <code>Table</code> …","Returns the minimum size of the memory.","Returns the minimum size of the table.","Returns the module’s name of the import.","Returns whether the global is mutable.","Returns whether the global is muable.","Returns the name of the export.","Returns the name of the import.","Get or set the current name of the module.","Creates a new <code>FunctionType</code>.","Creates a new <code>MemoryType</code>.","Creates a new <code>GlobalType</code>.","Creates a new <code>TableType</code>.","Creates a new <code>ExportType</code>.","Creates a new <code>ImportType</code>.","Creates a new <code>Store</code>.","Creates a new <code>Module</code>.","Creates a new <code>Instance</code>.","Creates a new <code>ImportObject</code>.","Creates a new <code>Function</code>. The <code>function</code> can be of kind <code>Symbol</code>…","Creates a new <code>Memory</code>.","Creates a new <code>Global</code>.","Creates a new <code>Table</code>.","Returns the parameters.","","","","","","","","","","","","","","","","","","","","","","","","Registers a set of <code>Function</code>, <code>Memory</code>, <code>Global</code> or <code>Table</code> to a …","Returns the results.","Serializes a module into a binary representation that the …","Returns whether the memory is shared or not.","Returns the size (in pages) of the memory.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type of the global.","Returns the type of table.","Returns the type of the export.","Returns the type of the import.","Returns the function type.","Returns the memory type.","Returns the global type.","","","","","","","","","","","","","","","","","","","","","","","","Creates a read-and-write view over the memory data where …","Creates a read-and-write view over the memory data where …","Creates a read-and-write view over the memory data where …","Validates a new WebAssembly Module given the configuration …","Get or set a new value to the global if mutable.","The environment provided to the WASI imports.","","","","Convenient builder API for configuring WASI.","Represents a WASI version.","Adds an argument.","Adds multiple arguments.","","","","","","","","","","","","","","","","Add an environment variable pair.","Add environment variable pairs.","Produces a WASI <code>Environment</code> based on this state builder.","","","","Create an <code>ImportObject</code> with an existing <code>Environment</code>. The …","Detect the version of WASI being used based on the import …","","","","","","","Preopen directories with a different name exposed to the …","Preopen a directory with a different name exposed to the …","","","","","Preopen directories with a different name exposed to the …","Preopen a directory with a different name exposed to the …","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,8,0,0,8,8,8,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,20,19,16,21,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,16,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,16,17,30,30,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,21,30,30,16,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,21,21,21,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,18,10,12,18,10,12,14,11,28,13,14,16,9,10,11,12,13,14,15,16,17,19,20,21,28,29,9,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,19,9,16,10,21,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,11,12,13,14,20,21,28,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,21,21,21,16,28,0,31,31,31,0,0,32,32,31,32,33,31,32,33,31,32,33,31,32,33,31,32,33,32,32,32,31,32,33,33,0,31,32,33,31,32,33,32,32,32,31,32,33,32,32,31,32,33,31,32,33,31,32,33],"f":[null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["any",3],["any",3],["any",3],["any",3]],["any",3]],[[["string",3]],["boolean",3]],[[["string",3]],["array",3,[["string",3]]]],[[],["integer",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["string",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["array",3,[["exporttype",3]]]],[[],["exports",3]],[[["float",3]]],[[["float",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["integer",3]],["integer",3]],[[["integer",3]]],[[["integer",3]]],[[],["array",3,[["importtype",3]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["int16view",3]],[[],["int32view",3]],[[],["int8view",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["integer",3]],[[],["option",4,[["integer",3]]]],[[],["option",4,[["integer",3]]]],[[["string",3]],["any",3]],[[],["integer",3]],[[],["integer",3]],[[],["string",3]],[[],["boolean",3]],[[],["boolean",3]],[[],["string",3]],[[],["string",3]],[[["string",3]]],[[["array",3,[["type",4]]],["array",3,[["type",4]]]]],[[["integer",3],["option",4,[["integer",3]]],["boolean",3]]],[[["type",4],["boolean",3]]],[[["type",4],["integer",3],["option",4,[["integer",3]]]]],[[["string",3],["any",3]]],[[["string",3],["string",3],["any",3]]],[[]],[[["store",3],["string",3]]],[[["module",3],["importobject",3]]],[[]],[[["store",3],["any",3],["functiontype",3]]],[[["store",3],["memorytype",3]]],[[["store",3],["value",3],["boolean",3]]],[[["store",3],["tabletype",3],["value",3]]],[[],["array",3,[["type",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["string",3],["hash",3,[["string",3],["any",3]]]]],[[],["array",3,[["type",4]]]],[[],["string",3]],[[],["integer",3]],[[],["integer",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["type",4]],[[],["type",4]],[[],["type",4]],[[],["type",4]],[[],["functiontype",3]],[[],["memorytype",3]],[[],["globaltype",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["uint16view",3]],[[],["uint32view",3]],[[],["uint8view",3]],[[["store",3],["string",3]],["boolean",3]],[[["any",3]],["any",3]],null,null,null,null,null,null,[[["string",3]]],[[["array",3,[["string",3]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["string",3],["string",3]]],[[["hash",3,[["string",3],["string",3]]]]],[[],["environment",3]],[[]],[[]],[[]],[[["store",3],["version",4]],["importobject",3]],[[["module",3],["boolean",3]],["version",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["hash",3,[["string",3],["string",3]]]]],[[["string",3],["string",3]]],[[["string",3]]],[[]],[[]],[[]],[[["hash",3,[["string",3],["string",3]]]]],[[["string",3],["string",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"Boolean"],[3,"Integer"],[3,"Float"],[3,"String"],[3,"Array"],[3,"Hash"],[3,"Any"],[4,"Type"],[3,"FunctionType"],[3,"MemoryType"],[3,"GlobalType"],[3,"TableType"],[3,"ExportType"],[3,"ImportType"],[3,"Store"],[3,"Module"],[3,"Instance"],[3,"Exports"],[3,"ImportObject"],[3,"Function"],[3,"Memory"],[3,"Uint8View"],[3,"Int8View"],[3,"Uint16View"],[3,"Int16View"],[3,"Uint32View"],[3,"Int32View"],[3,"Global"],[3,"Table"],[3,"Value"],[4,"Version"],[3,"StateBuilder"],[3,"Environment"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};